Charlie  6 Jan 2010
    - client: Eliminate x86_64 Mac client; i386 client determines if 
        system supports x86_64 applications and sets HOSTTYPE and 
        platform accordingly.  This allows us to link with the 32-bit 
        CUDA libraries.  The one other effect is that the benchmarks 
        are run in 32-bit mode even on a 64-bit capable Mac.
    - client: Async get_state RPC was not updating state.have_ati field.
    - MGR: Rebuild Advanced Menu and Taskbar Menu after connecting to 
        client, so GPU Activity and Snooze GPU items are displayed if 
        needed.
        
    client/
        cs_cmdline.cpp
        cs_platforms.cpp
    clientgui/
        AdvancedFrame.cpp
        AsyncRPC.cpp
        sg_BoincSimpleGUI.cpp
        mac/
            config.h
     mac_build/
        boinc.xcodeproj/
            project.pbxproj

Charlie  7 Jan 2010
    - Mac: Fix bug in backtrace code which showed up only under OS 10.6.
    - Mac installer: Add CUDA information to Mac ReadMe files.

    lib/
        mac/
            mac_backtrace.C
    mac_installer/
        GR-ReadMe.rtf
        PTP-ReadMe.rtf
        ReadMe.rtf

Charlie  7 Jan 2010
    - Tag for 6.10.26 release (changes from 6.10.25 are Mac only.)
      boinc_core_release_6_10_26

    /
        configure.ac
        version.h
        
David  18 Dec 2009
    - client (Mac): it's DYLD_LIBRARY_PATH, not DYLIB_LIBRARY_PATH

    client/
        app_start.cpp

David  3 Jan 2010
    - client: ATI available RAM wasn't being detected correctly

    client/
        coproc_detect.cpp

Charlie  8 Jan 2010
    - Tag for 6.10.27 release (changes from 6.10.25 are Mac only.)
      boinc_core_release_6_10_27

    /
        configure.ac
        version.h
        
Charlie  12 Jan 2010
    - client sandbox: set LD_LIBRARY_PATH and DYLD_LIBRARY_PATH in switcher.
        For unknown reasons, the these 2 environment variables are not 
        passed in to switcher, though all other environment variables do get 
        propagated.  

    client/
        switcher.cpp
     mac_build/
        boinc.xcodeproj/
            project.pbxproj

Charlie  12 Jan 2010
    - Tag for 6.10.28 release (changes from 6.10.25 are Mac only.)
      boinc_core_release_6_10_28

    /
        configure.ac
        version.h
        
David  9 Jan 2010
    - client (Mac): append /usr/local/cuda/lib to LD_LIBRARY_PATH
        and DYLD_LIBRARY_PATH

    client/
        app_start.cpp

Charlie  13 Jan 2010
    - MGR: The fix of 14 Oct 2009 for "initial first connection problem on 
        startup" caused the Tools menu to be incorrect when switching from 
        Simple to Advanced View if using an account manager: solve this by 
        calling pDoc->IsConnected() in CAdvancedFrame::CreateMenu() isntead 
        of using bool argument bRPCsSafe.  Remove unused bRPCsSafe arg from 
        CAdvancedFrame::CreateNotebook(), CAdvancedFrame::CreateStatusbar(). 
        
    clientgui/
        AdvancedFrame.cpp, .h

David  17 Dec 2009
    - client: show <cpu_sched> message when suspend/resume GPU activity

    client/
        cs_prefs.cpp

David  17 Dec 2009
	- client: there are oddball cases where the client has an app for which
		avg_ncpus > ncpus.   Allow such jobs to run; otherwise nothing runs.

	client/
		cpu_sched.cpp

David  17 Dec 2009
    - client: in computing "anticipated" STD, scale by ninstances
        (from John McLeod)

    client/
        cpu_sched.cpp

Rom    17 Dec 2009
    - MGR: Deconflict menu item IDs.
    
    clientgui/
        Events.h

David  21 Dec 2009
	- manager/client: show PID in task properties;
		add PID to RESULT structure in GUI RPC

	client/
		app.cpp
	clientgui/
		DlgItemProperties.cpp
	lib/
		gui_rpc_client.h
		gui_rpc_client_ops.cpp

David  22 Dec 2009
    - client: when parsing cc_config.xml,
        clear vectors so we don't end up with duplicates

    client/
        log_flags.cpp

David  24 Dec 2009
    - client: divide LTD deltas by ninstances, same as for STD.
        This is cosmetic - it won't affect work fetch,
        but it will prevent LTD from changing faster than real time

    client/
        work_fetch.cpp

David  24 Dec 2009
    - client: add logic to work fetch so that each project
        will have enough jobs to use its share of resource instances.
        This avoids situations where e.g. on a 2-CPU system
        a project has 75% resource share and 1 CPU job,
        and its STD increases without bound.
        
        Did a general cleanup of the logic for computing
        work request sizes (seconds and instances).

    client/
        work_fetch.cpp,h
        rr_sim.cpp
    sched/
        handle_request.cpp
